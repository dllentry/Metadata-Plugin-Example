<!--
    Copyright (c) 2017 Pelco. All rights reserved.
    
    This file contains trade secrets of Pelco. No part may be reproduced or
    transmitted in any form by any means or for any purpose without the express
    written permission of Pelco.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="po">
    <FontFamily x:Key="StandardFontFamily">Arial</FontFamily>
    <sys:Double x:Key="BaseFontSize">15</sys:Double>

    <!-- Colors-->
    <Color x:Key="ThemeHighlight">#6d6e71</Color>
    <Color x:Key="StandardBackground">#2b2f33</Color>
    <Color x:Key="ContentGray">#8C8C8C</Color>
    <Color x:Key="HighlightBackground">#143750</Color>
    <Color x:Key="Blue">#007DC5</Color>
    <Color x:Key="DarkBlue">#0067A3</Color>
    <Color x:Key="TextBoxBorder">#111111</Color>
    <Color x:Key="ToolTipBackYello">#FFEEAA</Color>
    <Color x:Key="ColorD3">#222</Color>    
    <Color x:Key="ColorD1">#111</Color>
    <Color x:Key="ColorD2">#222</Color>
    <Color x:Key="ColorActiveB1">#00629C</Color>
    <Color x:Key="ColorActiveA">#007DC5</Color>
    <!--Color x:Key="ColorActiveC2">#AADDEE</-->
    <Color x:Key="ColorB1">#AAA</Color>
    <Color x:Key="ColorB5">#eee</Color>
    <Color x:Key="ColorC4">#999</Color>
    <Color x:Key="ColorC1">#666</Color>
    <Color x:Key="ColorC5">#222</Color>
    <Color x:Key="ColorAlertA">#d83237</Color>
    <Color x:Key="ColorMode3A">#ff9911</Color>
    <Color x:Key="BackgroundColor">#222</Color>

    <SolidColorBrush x:Key="BackgroundColorBrush" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonHoverColorBrush" Color="{StaticResource ColorC5}"/>
    <SolidColorBrush x:Key="ButtonPressedColorBrush" Color="{StaticResource ColorC1}"/>
    <SolidColorBrush po:Freeze="True" x:Key="ColorB1Brush" Color="{StaticResource ColorB1}" />
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlue}" />
    <SolidColorBrush x:Key="ContentBrush" Color="{StaticResource ContentGray}"/>
    <SolidColorBrush x:Key="ThemeHighlightColorBrush" Color="{StaticResource ThemeHighlight}"/>
    <SolidColorBrush x:Key="StandardControlBackgroundBrush" Color="{StaticResource StandardBackground}"/>
    <SolidColorBrush x:Key="BlueBrush" Color="{StaticResource Blue}" />
    <SolidColorBrush x:Key="HighlightControlBackgroundBrush" Color="{StaticResource HighlightBackground}" />
    <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource ToolTipBackYello}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource TextBoxBorder}"/>
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource ColorD3}"/>

    <SolidColorBrush po:Freeze="True" x:Key="ColorB5Brush" Color="{StaticResource ColorB5}"/>
    <SolidColorBrush po:Freeze="True" x:Key="ColorD2Brush" Color="{StaticResource ColorD2}" />
    <SolidColorBrush po:Freeze="True" x:Key="ColorD1Brush" Color="{StaticResource ColorD1}" />
    <SolidColorBrush po:Freeze="True" x:Key="ColorActiveABrush2" Color="{StaticResource ColorActiveA}" />
    <SolidColorBrush po:Freeze="True" x:Key="ColorActiveB1Brush" Color="{StaticResource ColorActiveB1}" />
    <SolidColorBrush po:Freeze="True" x:Key="ColorAlertABrush" Color="{StaticResource ColorAlertA}"/>
    <SolidColorBrush po:Freeze="True" x:Key="ColorMode3ABrush" Color="{StaticResource ColorMode3A}"/>

    <!--Progress Bar Control-->
    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="{StaticResource TextBoxBorder}" />
    <SolidColorBrush x:Key="ProgressBarGreenFillBrush" Color="#97CB59" />
    <SolidColorBrush x:Key="ProgressBarFillBrush" Color="#222222" />
    <SolidColorBrush x:Key="ColorActiveABrush" Color="#007DC5" />

    <!--Generic control and text styles -->
    <Style TargetType="{x:Type Control}"
           x:Key="MainTextStyle">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="14px" />
        <Setter Property="Foreground"
                Value="#AAAAAA" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontWeight"
                Value="Normal" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="MainTextBlockStyle">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="Foreground" Value="#FFF" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="LineHeight" Value="18px" />
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="HeadLineTextBlockStyle">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18px" />       
        <Setter Property="Foreground" Value="#AAAAAA" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="LineHeight" Value="18px" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="HeadLineTextBlockInfoStyle">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16px" />
        <Setter Property="Foreground" Value="#AAAAAA" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="LineHeight" Value="18px" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="SubHeadLineTextBlockStyle">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#AAAAAA" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="LineHeight" Value="18px" />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="ItalicTextBlockStyle" BasedOn="{StaticResource SubHeadLineTextBlockStyle}">
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="#777"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="WarningTextBlockStyle" BasedOn="{StaticResource SubHeadLineTextBlockStyle}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ColorMode3ABrush}"/>
    </Style>
    <Style TargetType="{x:Type Label}"
           x:Key="SubheadStyle"
           BasedOn="{StaticResource MainTextStyle}">
        <Setter Property="FontWeight"
                Value="Regular" />
    </Style>
    <Style TargetType="{x:Type Label}"
           x:Key="Subhead2Style"
           BasedOn="{StaticResource SubheadStyle}">
        <Setter Property="Foreground"
                Value="{StaticResource ThemeHighlightColorBrush}" />
    </Style>
    <Style TargetType="{x:Type Label}"
            x:Key="SubHeadContentStyle"
            BasedOn="{StaticResource SubheadStyle}">
        <Setter Property="Foreground" Value="{StaticResource ContentBrush}"/>
        <Setter Property="FontWeight"
                Value="Normal" />
    </Style>
    
    <Style TargetType="{x:Type Control}" x:Key="MessageBoxHeadStyle">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18px" />
        <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!--Button Styles -->    
    <Color x:Key="ColorA">#FFF</Color>
    <SolidColorBrush x:Key="ButtonColorBrush" Color="{StaticResource ColorD2}"/>
    <SolidColorBrush x:Key="ButtonTextColorBrush" Color="{StaticResource ColorA}" />
    <SolidColorBrush x:Key="ButtonBorderColorBrush" Color="{StaticResource ColorD3}" />

    <Style TargetType="{x:Type Button}" x:Key="StandardButtonNewStyle"  BasedOn="{StaticResource MainTextStyle}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#444444"/>
        <!--<Setter Property="Foreground" Value="{StaticResource ButtonTextColorBrush}"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8 2"/>
        <!--<Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#222222"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}"/>
                            <Setter Property="Background"  Value="#333333" />
                            <Setter Property="BorderBrush"
                        Value="#555555" />
                            <Setter Property="Foreground"
                        Value="#555555" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush"   Value="#cccccc" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="PrimaryButtonMessageBoxStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#aaddee"/>
        <Setter Property="Foreground" Value="#666"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedColorBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8 2"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#aaddee"/>
                            <Setter Property="Foreground" Value="#111"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ColorD1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#eee"/>
                            <Setter Property="Foreground" Value="#007DC5"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ColorActiveB1Brush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#aaddee"/>
                            <Setter Property="Foreground" Value="#222"/>
                            <Setter Property="BorderBrush" Value="{StaticResource ColorActiveABrush2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="StandardButtonMessageBoxStyle"  BasedOn="{StaticResource MainTextStyle}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#C5C5C5"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8 2"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#222222"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C5C5C5"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#007DC5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#13151a" />
                            <Setter Property="BorderBrush" Value="#5c5d62" />
                            <Setter Property="Foreground" Value="#5c5d62" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>      
    <Style x:Key="DarkCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ThemeHighlightColorBrush}" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <!--<Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="12" Height="12" Background="{TemplateBinding Background}"
                                    BorderBrush="Black" BorderThickness="1" ClipToBounds="True">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" ShadowDepth="2" />
                                </Border.Effect>
                                <Path x:Name="CheckMark" Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Stretch="Fill" Stroke="#007dc5" StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round" StrokeThickness="2" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContentCheckboxStyle" BasedOn="{StaticResource DarkCheckBox}" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#AAAAAA" />                
    </Style>    
    <Style  x:Key="HyperLinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="FontSize" Value="14px" />
        <Setter Property="Foreground" Value="#33BBFF" />
        <Setter Property="TextDecorations" Value="None"/>
    </Style>
    <Style x:Key="RichTextStyle" TargetType="RichTextBox">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property = "BorderBrush" Value="Black"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Images info-->
    <DrawingImage x:Key="info-12x12-a">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#666666" Geometry="F1 M 8.28533,13.3334L 9.61867,13.3334L 9.35733,14.6667L 5.13866,14.6667L 6.70934,6.66667L 5.376,6.66667L 5.63866,5.33336L 9.85733,5.33336M 10.6427,1.33336L 10.1187,3.99998L 7.23334,3.99998L 7.75733,1.33336M 8,16C 12.4173,16 16,12.4187 16,7.99998C 16,3.58128 12.4173,-1.52588e-005 8,-1.52588e-005C 3.58133,-1.52588e-005 0,3.58128 0,7.99998C 0,12.4187 3.58133,16 8,16 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <Style BasedOn="{StaticResource StandardButtonNewStyle}" x:Key="TextBoxTooltipStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Image Source="{StaticResource info-12x12-a}"/>
                    <ControlTemplate.Triggers>                       
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- close-x-10x10-c1.xaml -->
    <DrawingImage x:Key="CloseX10x10C1Image">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#666" Geometry="F1 M 13.3359,1.88403L 11.452,0L 6.66797,4.7854L 1.88403,0L 0,1.88403L 4.7854,6.66931L 0,11.4547L 1.88403,13.3387L 6.66797,8.55334L 11.452,13.3387L 13.3359,11.4547L 8.552,6.66931L 13.3359,1.88403 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    <Style BasedOn="{StaticResource StandardButtonNewStyle}" x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Image Source="{StaticResource CloseX10x10C1Image}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush"   Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox Style -->
    <Style TargetType="{x:Type TextBox}" x:Key="StandardTextBoxStyle" BasedOn="{StaticResource MainTextStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30px" />
        <Setter Property="Background" Value="{StaticResource HighlightControlBackgroundBrush}" />
        <Setter Property="Padding" Value="2,0,12,0" />
    </Style>
    <Style BasedOn="{StaticResource StandardTextBoxStyle}" x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property = "BorderBrush" Value="Black"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="#777777" />
        <Setter Property="FontStyle" Value="Italic" />
    </Style>
    <!--ProgressBar Style-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="6" MinWidth="200" Background="{StaticResource ProgressBarFillBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track" CornerRadius="0" BorderThickness="1" BorderBrush="{StaticResource ProgressBarBorderBrush}"/>
                        <Border x:Name="PART_Indicator" CornerRadius="0" BorderThickness="0" HorizontalAlignment="Left" Background="{StaticResource ProgressBarGreenFillBrush}" Margin="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UpdateProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ColorActiveABrush}" />
    </Style>
    <!--ScrollBar Style-->
    <SolidColorBrush x:Key="ScrollBarBackground"
                     Color="#CCCCCC" />
    <SolidColorBrush x:Key="ScrollBarArrowAndHandlesBrush"
                     Color="#A9A9A9" />
    <LinearGradientBrush x:Key="PressedBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="0.1" />
                <GradientStop Color="#EEE"
                              Offset="0.9" />
                <GradientStop Color="#FFF"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Scroll Bar Page Button-->
    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Margin="2"
                            CornerRadius="0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource ScrollBarArrowAndHandlesBrush}"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="0"
                    Background="{StaticResource ScrollBarBackground}" />
            <Track  Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true" >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb  Style="{StaticResource ScrollBarThumb}"
                            Margin="0,0,1,0"
                            Background="{StaticResource ScrollBarArrowAndHandlesBrush}"
                            BorderBrush="Transparent"
                            BorderThickness="0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <!--Horizontal Scroll Bar-->
    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="0"
                    Background="{StaticResource ScrollBarBackground}" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0,1,0,1"
                           Background="{StaticResource ScrollBarArrowAndHandlesBrush}"
                           BorderBrush="Transparent"
                           BorderThickness="0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Height"
                        Value="12" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="10" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- BlueRadioButton Style-->
    <Style x:Key="BlueRadioButton" TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource ColorD2Brush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorD1Brush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="14" Width="14">
                                <Ellipse Name="MainEllipse" Width="Auto" Height="Auto" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="1" />
                                <Ellipse x:Name="Selected" Margin="4" Width="Auto" Height="Auto" Visibility="Hidden" Fill="{StaticResource ColorActiveABrush2}" />
                            </Grid>
                        </BulletDecorator.Bullet>

                        <ContentPresenter />
                    </BulletDecorator>

                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!---Color brushes-->
    <SolidColorBrush x:Key="ColorD4Brush" Color="#444444"/>
    <SolidColorBrush x:Key="NormalForegroundBrush" Color="#aaa"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#555555"/>
    <SolidColorBrush x:Key="ColorC2Brush" Color="#777"/>
    <SolidColorBrush x:Key="ColorD3Brush" Color="#333"/>
    <SolidColorBrush x:Key="HoverForegroundBrush" Color="#fff"/>
    
    <!--Secondary button style -->
    <Style x:Key="SecondaryButtonStyle" BasedOn="{StaticResource StandardButtonNewStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD4Brush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorD2Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorD2Brush}" />
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD4Brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ColorActiveABrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD2Brush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorActiveB1Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ColorActiveB1Brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Primary button style -->
    <Style x:Key="PrimaryButtonstyle"  BasedOn="{StaticResource StandardButtonNewStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD4Brush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorB1Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorB1Brush}" />
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD4Brush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ColorActiveABrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD2Brush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorActiveB1Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ColorActiveB1Brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Close button style-->
    <Style x:Key="FinishButtonStyle" BasedOn="{StaticResource StandardButtonNewStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorD4Brush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorD2Brush}" />
                <Setter Property="Foreground" Value="{StaticResource ColorB1Brush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Storyboard x:Key="FadeIn">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.8"/>
    </Storyboard>

    <Storyboard x:Key="FadeOut">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.8"/>
    </Storyboard>

    <Style x:Key="ErrorTemplateStyle" TargetType="Control" BasedOn="{StaticResource MainTextStyle}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Image Source="/CustomBundleUI;component/Resources/warning.png" Width="15" Margin="-25,0,0,0" DockPanel.Dock="Right">
                            <Image.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource FadeIn}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                                    <BeginStoryboard Storyboard="{StaticResource FadeOut}"/>
                                </EventTrigger>
                            </Image.Triggers>
                        </Image>

                        <TextBlock Foreground="#d83237"
                                   FontWeight="Bold"
                                   DockPanel.Dock="Right"
                                   Margin="-25,0,0,0"
                                   ToolTip="{Binding ElementName=myControl, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>

                        <Border BorderBrush="{StaticResource ColorAlertABrush}" BorderThickness="1">
                            <AdornedElementPlaceholder Name="myControl"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="ErrorFeedbackTextStyle" BasedOn="{StaticResource ErrorTemplateStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Height" Value="30px"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource HighlightControlBackgroundBrush}"/>
        <Setter Property="Padding" Value="2,0,12,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="#777777"/>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="TabControlStyle">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColorBrush}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle">
        <Setter Property="Foreground" Value="{StaticResource BlueBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="1,1,1,0" Background="{StaticResource BackgroundColorBrush}" CornerRadius="4,4,0,0" Margin="2,0">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
